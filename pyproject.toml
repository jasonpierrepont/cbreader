[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "comic-book-reader"
version = "1.0.0"
description = "A Python application to read CBR/CBZ comic book archives and remove unwanted pages"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Comic Reader Developer", email = "developer@example.com"}
]
keywords = ["comic", "cbr", "cbz", "reader", "archive", "gui", "pyside6"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics :: Viewers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: X11 Applications :: Qt",
]
requires-python = ">=3.8.1"
dependencies = [
    "PySide6>=6.5.0",
    "Pillow>=9.0.0",
    "patool>=1.12.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-qt>=4.2.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/comic-book-reader"
Repository = "https://github.com/yourusername/comic-book-reader.git"
Documentation = "https://github.com/yourusername/comic-book-reader#readme"
Issues = "https://github.com/yourusername/comic-book-reader/issues"

[project.scripts]
comic-reader = "comic_reader:main"
cbr-reader = "comic_reader:main"

[project.gui-scripts]
comic-reader-gui = "comic_reader:main"

[tool.hatch.build.targets.wheel]
packages = ["comic_reader.py", "launch.py"]

[tool.hatch.build.targets.sdist]
include = [
    "comic_reader.py",
    "launch.py",
    "README.md",
    "requirements.txt",
    "pyproject.toml",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["comic_reader"]

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "patoolib"
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["comic_reader"]
omit = [
    "*/tests/*",
    "*/test_*",
    "launch.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Ruff configuration (alternative to flake8)
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["comic_reader"]
